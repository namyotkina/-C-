1.Напишите функцию power, реализующую возведение целого числа в неотрицательную целую степень. Функция power должна принимать на вход два целых числа и возвращать целое число (смотрите шаблон кода). При выполнении задания учтите, что функция обязательно должна называться power, функция ничего не должна читать со входа или выводить.

Требования к реализации: в этом задании вам нужно реализовать только функцию power. Вы можете определять вспомогательные функции, если они вам нужны. Реализовывать функции main не нужно. 

Ограничения: библиотеку cmath (и math.h) использовать запрещено.

Рещение:

int power(int x, unsigned p) {
  int answer = 1;
  for(unsigned i = 0; i < p; i++)
    answer *= x;
  
  return answer;
}

2. Напишите программу для решения квадратных уравнений вида ax2+bx+c=0 (относительно x). На вход программа получает три целых числа: a , b и c, соответственно. При этом гарантируется, что a?0. На вывод программа должна вывести два вещественных корня уравнения, разделённые пробелом. Если вещественных корней нет, то программа должна вывести строку "No real roots". Если у уравнения имеется только один корень (кратный корень), то программа должна вывести его дважды. Порядок вывода корней не важен. Ничего, кроме этого, выводить не нужно. Для вычислений с плавающей точкой используйте тип double. При выполнении задания вам может оказаться полезной функция sqrt из заголовочного файла cmath.

Замечание: после того, как вы сдадите это задание, попробуйте подумать, как изменилась бы ваша программа, если бы мы не гарантировали, что a?0.

Решение:
 #include <iostream>
#include <cmath>

using namespace std;

int main()
{
   int a, b, c, d=0;
   cin >> a>>b>>c;
    d = ((b*b)-4*a*c);
    if (d < 0)
    {
        cout << "No real roots";
    }else if (d >0)
    {
        double x =(-b-sqrt(d))/ (2*a);
        double x1 =(-b+sqrt(d))/ (2*a);
        cout << x << " "<< x1;
    } else if(d == 0)
    {
       double v = -b/2*a;
        cout<< v <<" " <<  v;
    }
    // ...

    return 0;
}